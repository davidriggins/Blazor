@page "/"
@using static BlazorMovies.Client.Shared.MainLayout
@inject SingletonService singleton
@inject IRepository repository

@*<p>Hello, @StringUtilities.CustomToUpper(name)</p>

    <p>Let's add 2 + 2 = @(2 + 2)</p>

    <button @onclick="@(() => Console.WriteLine("I've been clicked!"))">Click me</button>
    <button @onclick="@WriteInLog">Click me</button>
*@

<p style="color: @AppState.Color">Singleton count: @singleton.Value</p>
<div>
    <h3>Movie</h3>
    <MoviesList Movies="movies">

    </MoviesList>
</div>

<button @onclick="AddNewMovie">Add new movie</button>
<div>
    <h2>Create a movie</h2>

    @*<DummyTextBox placeholder="Movie name" disabled="true"></DummyTextBox>*@
    <DummyTextBox @attributes="dummyTextboxParameters"></DummyTextBox>
</div>

<CustomTypeahead SearchMethod="SearchMethod">
    <ResultTemplate>
        @context
    </ResultTemplate>
</CustomTypeahead>


@code {
    [CascadingParameter(Name = "AppState")] public AppState AppState { get; set; }

    private List<Movie> movies;
    private Dictionary<string, object> dummyTextboxParameters = new Dictionary<string, object>() {
                                    { "placeholder", "New movie name"},
                                    { "disabled", "true"}
                                    };

    protected override void OnInitialized()
    {

        // Simulate waiting for database
        //await Task.Delay(3000);

        movies = repository.GetMovies();
    }

    private void AddNewMovie()
    {
        movies.Add(new Movie() { Title = "Movie Sample", ReleaseDate = DateTime.Today });
    }

    private async Task<IEnumerable<string>> SearchMethod(string searchText)
    {
        await Task.Delay(2000);
        if (searchText == "test") { return Enumerable.Empty <string>(); }
        return new List<string>() { "Felipe", "Gavilanch2" };
    }

}